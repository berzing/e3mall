<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>e3-manager</artifactId>
        <groupId>cn.e3mall</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>e3-manager-web</artifactId>
    <!--web工程打包方式为war-->
    <packaging>war</packaging>


    <!--
        表现层需要依赖service
        (不需要写pojo的依赖  因为service依赖了pojo  因而pojo依赖会通过service传递给表现层)
    -->
    <dependencies>
        <dependency>
            <groupId>cn.e3mall</groupId>
            <artifactId>e3-manager-service</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!--但只有service传递过来的jar包还不够  我们还需要jsp相关的api:jstl,servlet-api,jsp-api-->
        <!-- JSP相关 -->
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet-api.version}</version>
            <scope>provided</scope>
            <!--provided表示  我们编译、运行、测试时都会用到此jar包  但是打包的时候我们不会将其打进war包(因为容器里面都会提供当前的jar包)-->
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp-api.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>